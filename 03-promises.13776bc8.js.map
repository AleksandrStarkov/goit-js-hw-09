{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAIhCC,GAHUF,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,mBACpBD,SAASC,cAAc,WAE3C,IAAIE,EAAQ,KACRC,EAAO,KACPC,EAAS,GACTC,EAAW,EAefP,EAAOQ,iBAAiB,UAExB,SAAuBC,GACrBA,EAAIC,iBACJJ,EAAOK,OAAO,GACdR,EAAYS,UAAW,EAEvB,MAAMC,EAAQJ,EAAIK,cAAcC,SAEhCX,EAAQY,OAAOH,EAAMI,MAAMC,OAC3Bb,EAAOW,OAAOH,EAAMM,KAAKD,OACzB,MAAME,EAAaJ,OAAOH,EAAMQ,OAAOH,OAEvC,IAAK,IAAII,EAAI,EAAGA,GAAKF,EAAYE,GAAK,EACpChB,EAAOiB,KAAKD,GAGdhB,EAAOkB,KAAIC,IA9Bb,IAAuBC,EAAUC,EA+B7BpB,EAAWkB,EACM,IAAblB,IACFH,GAASC,IAjCQqB,EAoCLnB,EApCeoB,EAoCLvB,EAnCnB,IAAIwB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUT,MAAAU,IAEpBG,EAAO,CAAEK,SAAAT,EAAUT,MAAAU,MAEpBA,OA4BAS,MAAK,EAAGD,SAAAE,EAAUpB,MAAAqB,MACjBC,EAAAzC,GAAS0C,OAAOC,QACd,wBAAqBJ,QAAkBC,UAI1CI,OAAM,EAAGP,SAAAQ,EAAU1B,MAAA2B,MAClBL,EAAAzC,GAAS0C,OAAOK,QACd,uBAAoBF,QAAeC,aAI3CE,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\nconst btnSubmitEl = document.querySelector('button');\n\nlet delay = null;\nlet step = null;\nlet amount = [];\nlet position = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', hendlerSubmit);\n\nfunction hendlerSubmit(evt) {\n  evt.preventDefault();\n  amount.splice(0);\n  btnSubmitEl.disabled = true;\n\n  const input = evt.currentTarget.elements;\n\n  delay = Number(input.delay.value);\n  step = Number(input.step.value);\n  const inputValue = Number(input.amount.value);\n\n  for (let i = 1; i <= inputValue; i += 1) {\n    amount.push(i);\n  }\n\n  amount.map(number => {\n    position = number;\n    if (position !== 1) {\n      delay += step;\n    }\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `ðŸ¥³ Fulfilled promise ${position} in ${delay}ms`,\n        );\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `ðŸ’¥ Rejected promise ${position} in ${delay}ms`,\n        );\n      });\n  });\n  console.log(25);\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$btnSubmitEl","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$position","addEventListener","evt","preventDefault","splice","disabled","input","currentTarget","elements","Number","delay","value","step","inputValue","amount","i","push","map","number","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","position2","delay2","$parcel$interopDefault","Notify","success","catch","position3","delay3","failure","console","log"],"version":3,"file":"03-promises.13776bc8.js.map"}